[{"/data/data/com.termux/files/home/rapp/src/index.js":"1","/data/data/com.termux/files/home/rapp/src/App.js":"2","/data/data/com.termux/files/home/rapp/src/MovieCard.jsx":"3"},{"size":144,"mtime":1659067404303,"results":"4","hashOfConfig":"5"},{"size":1706,"mtime":1659117343513,"results":"6","hashOfConfig":"5"},{"size":507,"mtime":1659113563602,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"e0ouel",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/data/data/com.termux/files/home/rapp/src/index.js",[],[],[],"/data/data/com.termux/files/home/rapp/src/App.js",["19"],[],"import {React, useEffect, useState} from 'react';\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\"\n;\nimport MovieCard from \"./MovieCard.jsx\";\n\n// key: 9b0d5d78\n// OMDb API: http://www.omdbapi.com/?i=tt3896198&apikey=9b0d5d78\nconst API_URL = \"http://www.omdbapi.com?apikey=9b0d5d78\";\n\nconst movie ={\n  Poster: \"https://m.media-amazon.com/images/M/MV5BYThjYzcyYzItNTVjNy00NDk0LTgwMWQtYjMwNmNlNWJhMzMyXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\",\nTitle: \"Batman v Superman: Dawn of Justice\",\nType: \"movie\",\nYear: \"2016\",\nimdbID: \"tt2975590\"\n};\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const searchMovies = async (title) => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  }\n  useEffect(() => {\n    searchMovies('devil');\n  },[]);\n  return (\n    <div className=\"app\">\n      <h1>MovieLand</h1>\n      <div className=\"search\">\n        <input\n          placeholder=\"Search for movies\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <img\n          src={SearchIcon}\n          alt=\"search\"\n          onClick={ () => searchMovies(searchTerm)}\n        />\n      </div>\n      {\n        movies?.length > 0 \n          ? (\n            <div className=\"container\">\n              {\n                movies.map( (movie) => (\n                    <MovieCard movie={movie} />\n               ))\n              }\n            </div>\n          ) : (\n            <div className=\"empty\">\n              <h2>No movies found</h2>\n            </div>\n          )\n      }\n      \n    </div>\n    );\n}\n\nexport default App;","/data/data/com.termux/files/home/rapp/src/MovieCard.jsx",[],[],{"ruleId":"20","severity":1,"message":"21","line":11,"column":7,"nodeType":"22","messageId":"23","endLine":11,"endColumn":12},"no-unused-vars","'movie' is assigned a value but never used.","Identifier","unusedVar"]